---
version: '3'
services:
  grafana:
    image: grafana/grafana
    restart: 'always'
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
  prometheus:
    image: prom/prometheus:latest
    restart: 'always'
    user: 0:0
    ports:
      - 9090:9090
    volumes:
      - "${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "${PWD}/prometheus/rules:/etc/prometheus/rules:ro"
      - prometheus:/prometheus
  alertmanager:
    image: prom/alertmanager:latest
    restart: 'always'
    ports:
      - 9093:9093
    volumes:
      - "${PWD}/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml"
  process_exporter:
    image: ncabatoff/process-exporter
    restart: 'always'
    ports:
      - 9256:9256
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - "${PWD}/process/config.yml:/config.yml"
    command: --procfs /host/proc -config.path /config.yml

  cadvisor:
    image: google/cadvisor
    restart: 'always'
    ports:
      - 9080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  unifi:
    build: ./unifi
    image: unifi_exporter:latest
    restart: 'always'
    # ports:
    #   - 9130:9130
    volumes:
      - "${PWD}/unifi/config.yml:/config.yml:ro"
    command:
      - "--config.file=/config.yml"

  netdata:
    image: netdata/netdata
    hostname: nas.ankhmorpork.thaum.xyz
    restart: 'always'
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    environment:
      PGID: 989
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:19999/api/v1/allmetrics"]
      interval: 3s
      timeout: 5s

  notifier:
    image: int128/slack-docker
    hostname: nas
    restart: 'always'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      webhook: "<<SLACK_DOCKER>>"
      include_hostname: 1

volumes:
  prometheus:
  grafana:
